[{"E:\\ReactJS\\React_AppChat\\client_chat\\src\\index.js":"1","E:\\ReactJS\\React_AppChat\\client_chat\\src\\App.js":"2","E:\\ReactJS\\React_AppChat\\client_chat\\src\\reportWebVitals.js":"3","E:\\ReactJS\\React_AppChat\\client_chat\\src\\Socket.js":"4","E:\\ReactJS\\React_AppChat\\client_chat\\src\\Component\\Container.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":11455,"mtime":1609570647369,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":754,"mtime":1609409787544,"results":"10","hashOfConfig":"7"},{"size":1722,"mtime":1609502165132,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"2zzc3v",{"filePath":"15","messages":"16","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},"E:\\ReactJS\\React_AppChat\\client_chat\\src\\index.js",[],["25","26"],"E:\\ReactJS\\React_AppChat\\client_chat\\src\\App.js",["27","28","29","30","31","32"],"E:\\ReactJS\\React_AppChat\\client_chat\\src\\reportWebVitals.js",[],"E:\\ReactJS\\React_AppChat\\client_chat\\src\\Socket.js",[],["33","34"],"E:\\ReactJS\\React_AppChat\\client_chat\\src\\Component\\Container.jsx",["35"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nContainer.propTypes = {\r\n    container: PropTypes.array,\r\n};\r\n\r\nContainer.defaultProps = {\r\n    container: []\r\n}\r\n\r\n\r\nfunction Container(props) {\r\n\r\n    const { container } = props\r\n\r\n    // let arraySend = []\r\n    // const categorySend = container.map(value => {\r\n    //     if (value.category === 'send')\r\n    //         return arraySend.push(value.chat)\r\n    // })\r\n\r\n    // console.log(arraySend)\r\n\r\n\r\n    // let arrayReceive = []\r\n    // const categoryReceive = container.map(value => {\r\n    //     if (value.category === 'receive')\r\n    //         return arraySend.push(value.chat)\r\n    // })\r\n\r\n    // console.log(arrayReceive)\r\n\r\n\r\n\r\n    // const send = (\r\n    //     container && container.map((value, index) => (\r\n    //         <div className=\"media media-chat media-chat-reverse\" key={index}>\r\n    //             <div className=\"media-body\">\r\n    //                 <p>{value.chat}</p>\r\n    //             </div>\r\n    //         </div> \r\n    //     ))\r\n    // )\r\n\r\n    // const receive = (\r\n    //     <div className=\"media media-chat\">\r\n    //         <div className=\"media-body\">\r\n    //             <p>Bạn tên gì?</p>\r\n    //         </div>\r\n    //     </div>\r\n    // )\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                container && container.map((value, index) => (\r\n                    <div className=\"media media-chat media-chat-reverse\" key={index}>\r\n                        <div className=\"media-body\">\r\n                            <p>{value.chat}</p>\r\n                        </div>\r\n                    </div> \r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":163,"column":19,"nodeType":"42","endLine":163,"endColumn":83},{"ruleId":"40","severity":1,"message":"41","line":198,"column":19,"nodeType":"42","endLine":198,"endColumn":83},{"ruleId":"40","severity":1,"message":"41","line":216,"column":19,"nodeType":"42","endLine":216,"endColumn":83},{"ruleId":"40","severity":1,"message":"41","line":234,"column":19,"nodeType":"42","endLine":234,"endColumn":83},{"ruleId":"40","severity":1,"message":"41","line":256,"column":17,"nodeType":"42","endLine":256,"endColumn":81},{"ruleId":"43","severity":1,"message":"44","line":260,"column":15,"nodeType":"42","endLine":260,"endColumn":48},{"ruleId":"36","replacedBy":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":26},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["51"],["52"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]